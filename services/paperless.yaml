services:
  paperless:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    container_name: paperless
    volumes:
      - paperless-data:/usr/src/paperless/data
      - paperless-media:/usr/src/paperless/media
    environment:
      PAPERLESS_REDIS: redis://paperless-redis:6379
      PAPERLESS_DBHOST: paperless-postgres
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://paperless-tika:9998
      USERMAP_UID: ${PUID}
      USERMAP_GID: ${PGID}
      PAPERLESS_TIME_ZONE: ${TZ}
      PAPERLESS_URL: https://paperless.${TRAEFIK_DOMAIN}
      PAPERLESS_ENABLE_HTTP_REMOTE_USER: true
      PAPERLESS_HTTP_REMOTE_USER_HEADER_NAME: HTTP_REMOTE_USER
      PAPERLESS_LOGOUT_REDIRECT_URL: https://sso.${TRAEFIK_DOMAIN}/logout
    depends_on:
      - paperless-postgres
      - paperless-redis
    restart: unless-stopped
  
  paperless-postgres:
    image: docker.io/library/postgres:16
    container_name: paperless-postgres
    volumes:
      - paperless-db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless
    restart: unless-stopped
  
  paperless-redis:
    image: docker.io/library/redis:7
    container_name: paperless-redis
    volumes:
      - paperless-redis:/data
    restart: unless-stopped
  
  paperless-gotenberg:
    image: docker.io/gotenberg/gotenberg:8.7
    container_name: paperless-gotenberg
    # The gotenberg chromium route is used to convert .eml files. We do not
    # want to allow external content like tracking pixels or even javascript.
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"
    restart: unless-stopped

  paperless-tika:
    image: docker.io/apache/tika:latest
    container_name: paperless-tika
    restart: unless-stopped

volumes:
  paperless-data:
    driver: local-persist
    driver_opts:
      mountpoint: $HOST_CONFIG_PATH/paperless-data
  paperless-redis:
    driver: local-persist
    driver_opts:
      mountpoint: $HOST_CONFIG_PATH/paperless-redis
  paperless-media:
    driver: local-persist
    driver_opts:
      mountpoint: $HOST_CONFIG_PATH/paperless-media
  paperless-db:
    driver: local-persist
    driver_opts:
      mountpoint: $HOST_CONFIG_PATH/paperless-db